{"version":3,"file":"static/js/597.8af206d7.chunk.js","mappings":"gOAyCA,UArCa,WACX,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAcR,OAZAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,8GAEKC,EAAAA,EAAAA,IAAgBJ,GAFrB,OAERK,EAFQ,OAGdN,EAAQM,EAAKP,MAHC,gDAKdQ,QAAQC,IAAI,KAAMC,SALJ,yDAAH,qDAQfL,GACD,GAAE,CAACH,KAGF,iCACE,oCACA,wBACGF,EAAKW,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAAWC,EAAtC,EAAsCA,WAAtC,OACR,2BACE,gBACEC,IAAG,yCAAoCJ,GACvCK,IAAI,SACJC,MAAO,OAET,uBAAIL,KACJ,uCAAeC,EAAf,QACA,wCAAgBC,OARTJ,EADD,QAejB,C,yLCrCKQ,E,QAAWC,EAAAA,OAAa,CAC5BC,QAAS,gCACTC,OAAQ,CACNC,QAAS,sCAHb,SAOeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAA2BC,EAA3B,+BAAiC,GAAIC,EAArC,+BAA8C,CAAC,EAA/C,SACyBP,EAASQ,IAAIF,EAAKC,GAD3C,cACQE,EADR,yBAESA,EAAStB,MAFlB,mEAKO,SAAeuB,IAAtB,4CAAO,OAAP,oBAAO,uGACEL,EAAY,uBADd,kEAIA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,0FACEP,EAAY,sBAAD,OAAuBO,KADpC,kEAIA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+B/B,GAA/B,0FACEuB,EAAY,SAAD,OAAUvB,KADvB,kEAIA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA+BJ,GAA/B,0FACIuB,EAAY,SAAD,OAAUvB,EAAV,cADf,kEAIE,SAAegC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BhC,GAA/B,0FACEuB,EAAY,SAAD,OAAUvB,EAAV,cADb,kE","sources":["components/Cast.jsx","services/api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCredits } from 'services/api';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const movieCast = async () => {\n      try {\n        const data = await getMovieCredits(movieId);\n        setCast(data.cast);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    movieCast();\n  }, [movieId]);\n\n  return (\n    <>\n      <h3>Actors</h3>\n      <ul>\n        {cast.map(({ id, profile_path, name, character, popularity }) => (\n          <li key={id}>\n            <img\n              src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n              alt=\"{name}\"\n              width={100}\n            />\n            <p>{name}</p>\n            <p>Character: {character} </p>\n            <p>Popularity: {popularity}</p>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: '651df2f834e523ae20eba08e8b55c0c2',\n  },\n});\n\nasync function fetchMovies(url = '', config = {}) {\n  const response = await instance.get(url, config);\n  return response.data;\n}\n\nexport async function getTrending() {\n  return fetchMovies(`trending/movie/day`);\n}\n\nexport async function searchMovies(query) {\n  return fetchMovies(`search/movie?query=${query}`);\n}\n\nexport async function getMovieDetails(movieId) {\n  return fetchMovies(`movie/${movieId}`);\n}\n\nexport async function getMovieCredits(movieId) {\n    return fetchMovies(`movie/${movieId}/credits`);\n  }\n\n  export async function getMovieReviews(movieId) {\n    return fetchMovies(`movie/${movieId}/reviews`);\n  }\n\n\n\n  "],"names":["useState","cast","setCast","movieId","useParams","useEffect","movieCast","getMovieCredits","data","console","log","message","map","id","profile_path","name","character","popularity","src","alt","width","instance","axios","baseURL","params","api_key","fetchMovies","url","config","get","response","getTrending","searchMovies","query","getMovieDetails","getMovieReviews"],"sourceRoot":""}