{"version":3,"file":"static/js/681.845e9e0a.chunk.js","mappings":"gOA2CA,UAvCgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAeR,OAbAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,8GAEEC,EAAAA,EAAAA,IAAgBJ,GAFlB,OAEXK,EAFW,OAIjBN,EAAWM,EAAKC,SAJC,gDAMjBC,QAAQC,IAAI,KAAMC,SAND,yDAAH,qDASlBN,GACD,GAAE,CAACH,KAGF,iCACE,qCACA,wBACGF,EAAQY,KACP,oBAAGC,eAAkBC,EAArB,EAAqBA,SAAUC,EAA/B,EAA+BA,YAAeC,EAA9C,EAA8CA,QAASC,EAAvD,EAAuDA,GAAvD,OACE,2BACE,gBACEC,IAAG,yCAAoCH,GACvCI,IAAI,SACJC,MAAO,OAET,uBAAIN,KACJ,uBAAIE,MAPGC,EADX,QAeT,C,yLCvCKI,E,QAAWC,EAAAA,OAAa,CAC5BC,QAAS,gCACTC,OAAQ,CACNC,QAAS,sCAHb,SAOeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAA2BC,EAA3B,+BAAiC,GAAIC,EAArC,+BAA8C,CAAC,EAA/C,SACyBP,EAASQ,IAAIF,EAAKC,GAD3C,cACQE,EADR,yBAESA,EAASvB,MAFlB,mEAKO,SAAewB,IAAtB,4CAAO,OAAP,oBAAO,uGACEL,EAAY,uBADd,kEAIA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,0FACEP,EAAY,sBAAD,OAAuBO,KADpC,kEAIA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BhC,GAA/B,0FACEwB,EAAY,SAAD,OAAUxB,KADvB,kEAIA,SAAeiC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BjC,GAA/B,0FACIwB,EAAY,SAAD,OAAUxB,EAAV,cADf,kEAIE,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA+BJ,GAA/B,0FACEwB,EAAY,SAAD,OAAUxB,EAAV,cADb,kE","sources":["components/Reviews.jsx","services/api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'services/api';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const movieReviews = async () => {\n      try {\n        const data = await getMovieReviews(movieId);\n\n        setReviews(data.results);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    movieReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      <h2>Reviews</h2>\n      <ul>\n        {reviews.map(\n          ({ author_details: { username, avatar_path }, content, id }) => (\n            <li key={id}>\n              <img\n                src={`https://image.tmdb.org/t/p/w500${avatar_path}`}\n                alt=\"{name}\"\n                width={100}\n              />\n              <p>{username}</p>\n              <p>{content}</p>\n            </li>\n          )\n        )}\n      </ul>\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: '651df2f834e523ae20eba08e8b55c0c2',\n  },\n});\n\nasync function fetchMovies(url = '', config = {}) {\n  const response = await instance.get(url, config);\n  return response.data;\n}\n\nexport async function getTrending() {\n  return fetchMovies(`trending/movie/day`);\n}\n\nexport async function searchMovies(query) {\n  return fetchMovies(`search/movie?query=${query}`);\n}\n\nexport async function getMovieDetails(movieId) {\n  return fetchMovies(`movie/${movieId}`);\n}\n\nexport async function getMovieCredits(movieId) {\n    return fetchMovies(`movie/${movieId}/credits`);\n  }\n\n  export async function getMovieReviews(movieId) {\n    return fetchMovies(`movie/${movieId}/reviews`);\n  }\n\n\n\n  "],"names":["useState","reviews","setReviews","movieId","useParams","useEffect","movieReviews","getMovieReviews","data","results","console","log","message","map","author_details","username","avatar_path","content","id","src","alt","width","instance","axios","baseURL","params","api_key","fetchMovies","url","config","get","response","getTrending","searchMovies","query","getMovieDetails","getMovieCredits"],"sourceRoot":""}