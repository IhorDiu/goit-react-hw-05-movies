{"version":3,"file":"static/js/415.88f391e8.chunk.js","mappings":"qPAEaA,EAAcC,EAAAA,GAAAA,GAAH,kaAmBXC,EAAYD,EAAAA,GAAAA,GAAH,0HASTE,EAAUF,EAAAA,GAAAA,EAAH,wI,2GCQpB,EAlCmB,SAAC,GAOb,IANLG,EAMI,EANJA,GACAC,EAKI,EALJA,MACAC,EAII,EAJJA,cACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,aAGMC,GAAWC,EAAAA,EAAAA,MACXC,EAAc,IAAIC,KAAKJ,GAE7B,OACE,SAAC,KAAD,WACE,SAAC,KAAD,CAAMK,GAAE,kBAAaT,GAAMU,MAAO,CAAEC,KAAMN,GAA1C,UACE,4BACE,gBACEO,MAAM,MACNC,IACEX,EAAa,yCACyBA,GAClCY,EAENC,IAAKd,KAEP,SAAC,KAAD,UAAYA,KAEZ,UAAC,KAAD,sBAAkBE,EAAaa,QAAQ,GAAvC,UACA,UAAC,KAAD,4BAAwBT,EAAYU,uBAfxBjB,EAoBrB,E,UCZD,EArBmB,SAAC,GAAgB,IAAdkB,EAAa,EAAbA,OACpB,OAEI,SAAC,IAAD,UACGA,EAAOC,KACN,gBAAGnB,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,cAAeC,EAA7B,EAA6BA,aAAcC,EAA3C,EAA2CA,aAA3C,OACE,SAAC,EAAD,CAEEJ,GAAIA,EACJC,MAAOA,EACPC,cAAeA,EACfC,aAAcA,EACdC,aAAcA,GALTJ,EAFT,KAcT,C,sECpBYoB,E,QAAYvB,GAAAA,GAAH,gH,gHC2BtB,UAzBa,WACX,OAA4BwB,EAAAA,EAAAA,UAAS,IAArC,eAAOH,EAAP,KAAeI,EAAf,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAkB,mCAAG,8GAEJC,EAAAA,EAAAA,MAFI,OAEjBC,EAFiB,OAGvBJ,EAAUI,EAAKC,SAHQ,gDAKvBC,QAAQC,IAAI,KAAMC,SALK,yDAAH,qDASxBN,GACD,GAAE,KAID,6BACE,+CACA,SAAC,IAAD,CAAYN,OAAQA,MAGzB,C,yLCzBKa,E,QAAWC,EAAAA,OAAa,CAC5BC,QAAS,gCACTC,OAAQ,CACNC,QAAS,sCAHb,SAOeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAA2BC,EAA3B,+BAAiC,GAAIC,EAArC,+BAA8C,CAAC,EAA/C,SACyBP,EAASQ,IAAIF,EAAKC,GAD3C,cACQE,EADR,yBAESA,EAASd,MAFlB,mEAKO,SAAeD,IAAtB,4CAAO,OAAP,oBAAO,uGACEW,EAAY,uBADd,kEAIA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,0FACEN,EAAY,sBAAD,OAAuBM,KADpC,kEAIA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,0FACER,EAAY,SAAD,OAAUQ,KADvB,kEAIA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BD,GAA/B,0FACIR,EAAY,SAAD,OAAUQ,EAAV,cADf,kEAIE,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA+BF,GAA/B,0FACER,EAAY,SAAD,OAAUQ,EAAV,cADb,kE","sources":["components/MoviesCard/MoviesCard.styled.jsx","components/MoviesCard/MoviesCard.jsx","components/MoviesList/MoviesList.jsx","components/MoviesList/MoviesList.styled.jsx","pages/Home.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CardWrapper = styled.li`\n//   border: 1px solid black;\n  border-radius: 4px;\n  list-style-type: none;\n  flex-basis: calc(100% / 4 - 16px);\n  box-shadow: 0 3px 10px rgb(0 0 0 / 0.2);\n  transition: all 250ms ease-in-out;\n  :hover {\n    transform: scale(1.05);\n    box-shadow: inset 1px 1px 2px #FFFAF0,\n      inset -1px -1px 2px LightGrey;\n  }\n\n  > a {\n    text-decoration: none;\n    color: darkgrey;\n  }\n`;\n\nexport const MovieName = styled.h3`\n  padding: 4px;\n  margin-top: 8px;\n  margin-bottom: 0;\n  color: black;\n  padding-left: 16px;\n`;\n\n\nexport const AddInfo = styled.p`\nmargin-top: 0;\nmargin-bottom: 8px;\nmargin-left: 8px\ncolor: darkgrey;\npadding-left: 16px;\noverflow : hidden\n`;\n\n\n\n","import { useLocation, Link } from 'react-router-dom';\nimport no_photo from '../../Images/no_poster.jpg';\nimport { CardWrapper, MovieName, AddInfo } from \"./MoviesCard.styled\";\n\nconst MoviesCard = ({\n  id,\n  title,\n  backdrop_path,\n  vote_average,\n  release_date,\n  // poster_path,\n}) => {\n  const location = useLocation();\n  const releaseData = new Date(release_date);\n\n  return (\n    <CardWrapper key={id}>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        <div>\n          <img\n            width=\"400\"\n            src={\n              backdrop_path\n                ? `https://image.tmdb.org/t/p/w400${backdrop_path}`\n                : no_photo\n            }\n            alt={title}\n          />\n          <MovieName>{title}</MovieName>\n          {/* <p>{genre}</p> */}\n          <AddInfo>Rating: {vote_average.toFixed(1)}/10</AddInfo>\n          <AddInfo>Release year: {releaseData.getFullYear()}</AddInfo>\n        </div>\n      </Link>\n    </CardWrapper>\n  );\n};\n\nexport default MoviesCard;\n\n","import MoviesCard from 'components/MoviesCard/MoviesCard';\nimport { Container } from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  return (\n    \n      <Container>\n        {movies.map(\n          ({ id, title, backdrop_path, vote_average, release_date }) => (\n            <MoviesCard\n              key={id}\n              id={id}\n              title={title}\n              backdrop_path={backdrop_path}\n              vote_average={vote_average}\n              release_date={release_date}\n            />\n          )\n        )}\n      </Container>\n   \n  );\n};\n\nexport default MoviesList;\n","import styled from \"styled-components\";\n\nexport const Container = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 275px);\n  \n  gap: 16px;\n\n`;\n\n","import { useState, useEffect } from 'react';\nimport { getTrending } from 'services/api';\nimport MoviesList from '../components/MoviesList/MoviesList';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const trendingMoviesList = async () => {\n      try {\n        const data = await getTrending();\n        setMovies(data.results);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n\n    trendingMoviesList();\n  }, []);\n\n\n  return (\n    <main>\n      <h1>Trending on today</h1>\n      <MoviesList movies={movies} />\n    </main>\n  );\n};\n\nexport default Home;\n\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: '651df2f834e523ae20eba08e8b55c0c2',\n  },\n});\n\nasync function fetchMovies(url = '', config = {}) {\n  const response = await instance.get(url, config);\n  return response.data;\n}\n\nexport async function getTrending() {\n  return fetchMovies(`trending/movie/day`);\n}\n\nexport async function searchMovies(query) {\n  return fetchMovies(`search/movie?query=${query}`);\n}\n\nexport async function getMovieDetails(movieId) {\n  return fetchMovies(`movie/${movieId}`);\n}\n\nexport async function getMovieCredits(movieId) {\n    return fetchMovies(`movie/${movieId}/credits`);\n  }\n\n  export async function getMovieReviews(movieId) {\n    return fetchMovies(`movie/${movieId}/reviews`);\n  }\n\n\n\n  "],"names":["CardWrapper","styled","MovieName","AddInfo","id","title","backdrop_path","vote_average","release_date","location","useLocation","releaseData","Date","to","state","from","width","src","no_photo","alt","toFixed","getFullYear","movies","map","Container","useState","setMovies","useEffect","trendingMoviesList","getTrending","data","results","console","log","message","instance","axios","baseURL","params","api_key","fetchMovies","url","config","get","response","searchMovies","query","getMovieDetails","movieId","getMovieCredits","getMovieReviews"],"sourceRoot":""}