{"version":3,"file":"static/js/681.1140a156.chunk.js","mappings":"0OAyDA,UApDgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BH,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,2FACnBF,GAAW,GADQ,mBAGEG,EAAAA,EAAAA,IAAgBN,GAHlB,OAGXO,EAHW,OAIzBC,QAAQC,IAAIF,EAAKG,SACTX,EAAWQ,EAAKG,SALC,gDAOjBF,QAAQC,IAAI,KAAME,SAPD,yBASjBR,GAAW,GATM,4EAAH,qDAYlBE,GACD,GAAE,CAACL,KAGF,gCACGE,IAAW,yCACZ,qCACEA,GAA8B,IAAnBJ,EAAQc,SACnB,uEAEF,wBACGd,EAAQe,KACP,oBAAGC,eAAkBC,EAArB,EAAqBA,SAAUC,EAA/B,EAA+BA,YAAeC,EAA9C,EAA8CA,QAASC,EAAvD,EAAuDA,GAAvD,OACE,2BACE,gBACEC,IACEH,EAAW,yCAC2BA,GAClCI,EAENC,IAAI,SACJC,MAAO,OAET,wBAAKP,IAVP,2DAYE,uBAAIE,MAZGC,EADX,QAoBT,C,yLCrDKK,E,QAAWC,EAAAA,OAAa,CAC5BC,QAAS,gCACTC,OAAQ,CACNC,QAAS,sCAHb,SAOeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAA2BC,EAA3B,+BAAiC,GAAIC,EAArC,+BAA8C,CAAC,EAA/C,SACyBP,EAASQ,IAAIF,EAAKC,GAD3C,cACQE,EADR,yBAESA,EAASzB,MAFlB,mEAKO,SAAe0B,IAAtB,4CAAO,OAAP,oBAAO,uGACEL,EAAY,uBADd,kEAIA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,0FACEP,EAAY,sBAAD,OAAuBO,KADpC,kEAIA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BpC,GAA/B,0FACE4B,EAAY,SAAD,OAAU5B,KADvB,kEAIA,SAAeqC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BrC,GAA/B,0FACI4B,EAAY,SAAD,OAAU5B,EAAV,cADf,kEAIE,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA+BN,GAA/B,0FACE4B,EAAY,SAAD,OAAU5B,EAAV,cADb,kE","sources":["components/Reviews.jsx","services/api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'services/api';\nimport no_photo from '../Images/coming_soon.jpg';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const movieReviews = async () => {\n      setLoading(true);\n      try {\n        const data = await getMovieReviews(movieId);\nconsole.log(data.results);\n        setReviews(data.results);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    movieReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      {loading && <div>Loading...</div>}\n      <h2>Reviews</h2>\n      {!loading && reviews.length === 0 && (\n        <h3>We don't have any reviews for this movie.</h3>\n      )}\n      <ul>\n        {reviews.map(\n          ({ author_details: { username, avatar_path }, content, id }) => (\n            <li key={id}>\n              <img\n                src={\n                  avatar_path\n                    ? `https://image.tmdb.org/t/p/w500${avatar_path}`\n                    : no_photo\n                }\n                alt=\"{name}\"\n                width={100}\n              />\n              <h3>{username}</h3>\n              -------------------------------------------------------\n              <p>{content}</p>\n            </li>\n          )\n        )}\n      </ul>\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: '651df2f834e523ae20eba08e8b55c0c2',\n  },\n});\n\nasync function fetchMovies(url = '', config = {}) {\n  const response = await instance.get(url, config);\n  return response.data;\n}\n\nexport async function getTrending() {\n  return fetchMovies(`trending/movie/day`);\n}\n\nexport async function searchMovies(query) {\n  return fetchMovies(`search/movie?query=${query}`);\n}\n\nexport async function getMovieDetails(movieId) {\n  return fetchMovies(`movie/${movieId}`);\n}\n\nexport async function getMovieCredits(movieId) {\n    return fetchMovies(`movie/${movieId}/credits`);\n  }\n\n  export async function getMovieReviews(movieId) {\n    return fetchMovies(`movie/${movieId}/reviews`);\n  }\n\n\n\n  "],"names":["useState","reviews","setReviews","movieId","useParams","loading","setLoading","useEffect","movieReviews","getMovieReviews","data","console","log","results","message","length","map","author_details","username","avatar_path","content","id","src","no_photo","alt","width","instance","axios","baseURL","params","api_key","fetchMovies","url","config","get","response","getTrending","searchMovies","query","getMovieDetails","getMovieCredits"],"sourceRoot":""}